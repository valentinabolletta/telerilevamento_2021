#R_code_exam_Yellowstone_burn_recovery

#Nell'estate del 1988, i fulmini e gli incendi provocati dall'uomo consumarono vaste aree del Parco Nazionale di Yellowstone, soprattutto la parte occidentale, minacciando le strutture storiche intorno al bacino del geyser Old Faithful.
#La primavera era stata umida e l'erba era abbondante. L'estate fu caratterizzata da un caldo secco e quando i temporali senza pioggia attraversarono il parco, i fulmini incendiarono la vegetazione secca. 
#Entro la fine dell'estate, 50 incendi (alcuni iniziati da persone) avevano bruciato 793.000 dei 2.221.800 acri del parco.


#In questo codice sul recupero delle zone colpite dall'incendio nel parco di Yellowstone nel 1988:
#1. confronteremo le varie immagini scaricate dal sito NASA Earth Observatory https://earthobservatory.nasa.gov/world-of-change/Yellowstone e salvate nella cartella "yellowstone" nel disco locale C in una Times series 1987-2018,
#2. verrà poi calcolato l'indice NBR  #library(raster) #library(rasterVis) per levelplot
#3. valutazione della LAND COVER #library (ggplot2) e (gridExtra) per il plottaggio
#4. verrà operata una CLASSIFICAZIONE delle immagini #library(RStoolbox)
#5. variabilità spaziale: calcolata con eterogeneità dell'area utilizzando la tecnica della MOVING WINDOW
#6. firme spettrali

install.packages("raster") #scarica e installa dal CRAN o da files locali
#richiamo le librerie necessarie per le analisi
library(raster) #richiamo questa libreria che carica\allega i files su R
library(rgdal) #importa file raster e TIF e firme spettrali
library(rasterVis)
library(RStoolbox)
library(ggplot2)
library(gridExtra)
library(viridis)
setwd ("C:/lab/yellowstone/") #Windows  #setto la R Working Directory per spiegare ad R da che cartella andare a caricare il nostro dataset di immagini

#1. Times series 1987-2018

#le immagini scaricate e processate dal sito Earth Observatory NASA sono state realizzate con una combinazione di luce visibile e infrarossa (verde, infrarossi a onde corte(SWIR) e vicino all'infrarosso(NIR)) per evidenziare l'area bruciata e i cambiamenti nella vegetazione.
#se l'immagine fosse stata fatta con luce visibile, il fumo sarebbe così denso nell'immagine del 1988 denso da non permettere di vedere quasi nulla. Nell'immagine in infrarosso il fumo diventa invece una patina blu.

#Utilizzando la funzione "raster" carico le singole immagini e le plotto
Ys_1987beforefireR <- raster("Yellowstone_19870805.jpg") 

# colorRampPalette estende la palette dei colori, i numeri che vediamo a lato dell'immagine sono i valori di riflettanza e ad ogni valore è stato associato un colore
cts <- colorRampPalette(c("blue","dark green","light green","orange","white")) (100) #c creazione di un vettore o array(argomento) che racchiude i nuovi colori scelti (elementi)
plot(Ys_1987beforefireR, col=cts)
Ys_1988fireR<-raster("Yellowstone_19880823.jpg")
plot(Ys_1988fireR,col=cts)
Ys_1989afterfireR<-raster("Yellowstone_19890802.jpg")
plot(Ys_1989afterfireR,col=cts)
Ys_1993R<-raster("Yellowstone_19930922.jpg")
plot(Ys_1993R,col=cts)
Ys_1996R<-raster("Yellowstone_19960712.jpg")
plot(Ys_1996R,col=cts)
Ys_1998R<-raster("Yellowstone_19980718.jpg")
plot(Ys_1998R,col=cts)
Ys_2008R<-raster("Yellowstone_20080915.jpg")
plot(Ys_2008R,col=cts)
Ys_2018R<-raster("Yellowstone_20180222.jpg")
plot(Ys_2018R,col=cts)

par(mfrow=c(2,4))  ))  #funzione generica che permette il settaggio dei parametri grafici creando un multiframe
plot(Ys_1987beforefireR, col=cts)
plot(Ys_1988fireR,col=cts)
plot(Ys_1989afterfireR,col=cts)
plot(Ys_1993R,col=cts)
plot(Ys_1996R,col=cts)
plot(Ys_1998R,col=cts)
plot(Ys_2008R,col=cts)
plot(Ys_2018R,col=cts)

#Creiamo una lista con la funzione "list.files" e utilizziamo un "pattern" che accomuna tutti i files, in questo caso "Yellowstone_" Per importare tutte queste immagini insieme usiamo la funzione "lapply" applicabile ad una lista di file o un vettore
rlist <- list.files(pattern="ellowstone_")
#rlist

import <- lapply(rlist,raster) #alla funzione "lapply" viene applicata la funzione "raster"
#import

timesYs<-stack(import) #la funzione "stack" crea un unico file partendo da una lista o un dataframe a cui associamo un nome

par(mfrow=c(2,4))
cl <- colorRampPalette(c("blue","light blue","pink","red"))(100)
levelplot(timesYs,col.regions=cl,main="Yellostone Park's burn recovery",names.attr=c("1987","1988", "1989", "1993","1996","1998","2008","2018"))

#.................................................................................

#2. NBR (normalized burn ratio)
#Il Normalized Burn Ratio (NBR) è un indice che serve ad evidenziare le aree bruciate e quelle risparmiate dall'incendio in cui la veg. è ancora sana. La formula combina l'uso delle lunghezze d'onda dell'infrarosso vicino (NIR) e dell'infrarosso a onde corte (SWIR).
#(NIR-SWIR)/(NIR+SWIR)
#il range dell'NBR è [-1 , 1]

#La vegetazione sana mostra una riflettanza molto alta nel NIR e una riflettanza bassa nella porzione SWIR dello spettro
#Le aree recentemente bruciate mostrano una bassa riflettanza nel NIR e un'alta riflettanza nello SWIR.

#In questo modo le aree bruciate sono individuate da indici NBR negativi, le aree sane indici positivi

#Seleziono in questo caso le 4 immagini 1987,1988,1989 e 2008 e calcolo l'indice per ognuna
#bande 
#1 =SWIR
#2 =verde
#3 =NIR


Ys_1987beforefire<-brick("Yellowstone_19870805.jpg")
#Ys_1987beforefire
#class      : RasterBrick 
#dimensions : 3274, 3274, 10719076, 3  (nrow, ncol, ncell, nlayers)
#resolution : 1, 1  (x, y)
#extent     : 0, 3274, 0, 3274  (xmin, xmax, ymin, ymax)
#crs        : NA 
#source     : Yellowstone_19870805.jpg 
#names      : Yellowstone_19870805.1, Yellowstone_19870805.2, Yellowstone_19870805.3 
#min values :                      0,                      0,                      0 
#max values :                    255,                    255,                    255

Ys_1988fire<-brick("Yellowstone_19880823.jpg")
Ys_1989afterfire<-brick("Yellowstone_19890802.jpg")
Ys_2008<-brick("Yellowstone_20080915.jpg")

#NBR 1987
nbr_1987<-(Ys_1987beforefire$Yellowstone_19870805.3 - Ys_1987beforefire$Yellowstone_19870805.1)/(Ys_1987beforefire$Yellowstone_19870805.3 +Ys_1987beforefire$Yellowstone_19870805.1) # si esegue il calcolo per ricavare il valore di NBR
cl <- colorRampPalette(c('red','orange','green','yellow'))(100)# specifico la palette di colori desiderata
plot(nbr_1987, col=cl, main="NBR 1987")

#NBR 1988
nbr_1988<-(Ys_1988fire$Yellowstone_19880823.3  - Ys_1988fire$Yellowstone_19880823.1)/(Ys_1988fire$Yellowstone_19880823.3 +Ys_1988fire$Yellowstone_19880823.1) # si esegue il calcolo per ricavare il valore di NBR
plot(nbr_1988, col=cl, main="NBR 1988") 

#NBR 1989
nbr_1989<-(Ys_1989afterfire$Yellowstone_19890802.3  - Ys_1989afterfire$Yellowstone_19890802.1)/(Ys_1989afterfire$Yellowstone_19890802.3 +Ys_1989afterfire$Yellowstone_19890802.1) # si esegue il calcolo per ricavare il valore di NBR
plot(nbr_1989, col=cl, main="NBR 1989") 

#NBR 2008
nbr_2008<-(Ys_2008$Yellowstone_20080915.3  - Ys_2008$Yellowstone_20080915.1)/(Ys_2008$Yellowstone_20080915.3+Ys_2008$Yellowstone_20080915.1) # si esegue il calcolo per ricavare il valore di NBR
plot(nbr_2008, col=cl, main="NBR 2008")

par(mfrow=c(2,2))
plot(nbr_1987, col=cl, main="NBR 1987")
plot(nbr_1988, col=cl, main="NBR 1988")
plot(nbr_1989, col=cl, main="NBR 1989") 
plot(nbr_2008, col=cl, main="NBR 2008")
#oppure

levelplot(nbr_1987,col.regions=cl,main="NBR 1987")
levelplot(nbr_1988,col.regions=cl,main="NBR 1988")
levelplot(nbr_1989,col.regions=cl,main="NBR 1989")
levelplot(nbr_2008,col.regions=cl,main="NBR 2008")

#.................................................................

#3. Land cover
#per plottare in modo migliore le immagini richiamo la library ggplot2 e gridExtra

Ys_1987beforefire<-brick("Yellowstone_19870805.jpg")
Ys_1988fire<-brick("Yellowstone_19880823.jpg")
Ys_1989afterfire<-brick("Yellowstone_19890802.jpg")
Ys_2018<-brick("yellowstone_20180222.jpg")

plotRGB(Ys_1987beforefire,1, 2, 3, stretch="Lin")
plotRGB(Ys_1988fire,1, 2, 3, stretch="Lin")
plotRGB(Ys_1989afterfire,1, 2, 3, stretch="Lin")
plotRGB(Ys_2018,1, 2, 3, stretch="Lin")

p1<-ggRGB(Ys_1987beforefire,1, 2, 3, stretch="Lin") #con questa funzione vengono visualizzate anche le coordinate spaziali del nostro oggetto(conta dei pixel sulla x e sulla y, non è un vero S.R.!)
p2<-ggRGB(Ys_1988fire,1, 2, 3, stretch="Lin")
p3<-ggRGB(Ys_1989afterfire,1, 2, 3, stretch="Lin")
p4<-ggRGB(Ys_2018,1, 2, 3, stretch="Lin")

#per unire i plot generati in questo caso utiliazziamo la funzione "grid.arrange" dalla library gridExtra. Questa funzione compone il nostro multiframe unendo varie parti in un grafico.

grid.arrange(p1, p2, p3, p4, nrow = 2)

#.......................................................................

#4. Unsupervised classification
#in questo processo vengono accorpati pixel di un'immagine con valori simili a rappresentare una CLASSE. Ogni classe ha quindi dei pixel che corrispondono ad un determinato valore di riflettanza.
#siamo così in grado di capire qual è la percentuale di territorio che ha subito incendi, quella rivegetata e quella che non ha subito cambiamenti.

#ora classifichiamo le immagini in 3 CLASSI
1a CLASSE = prateria (bianco)
2a CLASSE = nuvole/parte incencendiata (giallo)
3a CLASSE = foresta (verde)

#set.seed(42) #questa funzione fa in modo che vengano utilizzate sempre le stesse repliche per il modello e che i colori rimangano gli stessi.
Ys1c <- unsuperClass(Ys_1987beforefire, nClasses=3)
Ys1c

#??????mettere una colorRamp, e fare il plot(class2018$map,col=cl)??

#set.seed(1)
#par(mfrow=c(2,2))
#plot(class1987$map,col=cl)
#plot(class1988$map,col=cl)
#plot(class1989$map,col=cl)
#plot(class2018$map,col=cl)??????

plot(Ys1c$map) #con la classificazione si generano diversi output, plottiamo solo la mappa e la richiamiamo con il simbolo $

Ys2c <- unsuperClass(Ys_1989afterfire, nClasses=3)
plot(Ys2c$map)

#Quanta parte di foresta è andata persa durante l'incendio del 1988? Andiamo a calcolare la frequenza dei pixel di una certa classe
#frequencies
freq(Ys1c$map)
     value   count
[1,]     1 4377087
[2,]     2  681566
[3,]     3 5660423


#calcoliamo la proporzione di pixel e sommiamo i valori
s1<-4377087+681566+5660423
s1
[1] 10719076

prop1<- freq(Ys1c$map)/s1
            value     count
[1,] 9.329162e-08 0.4083456   #prop. 40%    #40.83
[2,] 1.865832e-07 0.0635844   #prop. 0.06%  #06.35
[3,] 2.798749e-07 0.5280701   #prop. 52%    #52.80

s2<- 10719076
prop2<- freq(Ys2c$map)/s2
            value     count
[1,] 9.329162e-08 0.4371661   #43.71
[2,] 1.865832e-07 0.2003741   #20.03
[3,] 2.798749e-07 0.3624598   #36.24

#build a dataframe
cover<- c("prateria", "parte incendiata", "foresta")
percent_1987<- c(40.83,06.35,52.80)
percent_1989<- c(43.71,20.03,36.24)
          
percentages<- data.frame (cover, percent_1987, percent_1989)
percentages  
       cover percent_1987 percent_1989
1         prateria        40.83        43.71
2 parte incendiata         6.35        20.03
3          foresta        52.80        36.24

#Usando ggplot2 generiamo un dataframe
cover1<-ggplot(percentages, aes(x=cover, y=percent_1987, color=cover)) + geom_bar(stat="identity", fill="white")   
cover2<-ggplot(percentages, aes(x=cover, y=percent_1989, color=cover)) + geom_bar(stat="identity", fill="white")   + #creiamo il grafico a istogramma con le etichette delle percentuali in alto
  geom_text(aes(label = Percent01),position=position_dodge(width=0.7), vjust=-0.25, size = 6)
          
grid.arrange(cover1, cover2, nrow = 1) # this needs griExtra     

#5. Moving window
Ys_2018<-brick("yellowstone_20180222.jpg")
plotRGB(Ys_2018,1, 2, 3, stretch="Lin")
clndvi <- colorRampPalette(c('darkblue','yellow','red','black'))(100)

ndvi2 <- (Ys_2018$yellowstone_20180222.1-Ys_2018$yellowstone_20180222.2) / (Ys_2018$yellowstone_20180222.1+Ys_2018$yellowstone_20180222.2)
plot(ndvi2, col=clndvi, main="NDVI time 2")


#calcolo la variabilità di questa immagine con la funzione focal. La moving window, in questo caso, è una finestra mobile di 3x3 pixel che si muove nei primi 9 pixel dell'immagine e così via.
#Il pixel centrale raccoglie la dev.standard dei 9 pixel. Alla fine otterrò una nuova mappa con pixel colorati diversamente a seconda della dev.standard calcolata in una certa finestra(più la finestra è grande più mi aspetto una certa variabilità).
ndvi2_focal <- focal(ndvi2, w=matrix(1/9,nrow=3,ncol=3), fun=sd)
plot(ndvi2_focal)
clsd <- colorRampPalette(c('blue','green','pink','magenta','orange','brown','red','yellow'))(100)
plot(ndvi2_focal, col=clsd) #il blu dà una copertura omogenea di quelle che sono le rocce e le bruciature degli incendi. In blu anche i laghi. La dev. standard aumenta, quindi diventa più verde nelle zone di confine. Veg. e roccia nuda hanno una diversità più alta a livello spettrale, poi ridiminuisce nelle zone di prateria d'alta quota
 
#mean ndvi with focal
ndvimean <- focal(ndvi2, w=matrix(1/9, nrow=3, ncol=3), fun=mean)
clsd <- colorRampPalette(c('blue','green','pink','magenta','orange','brown','red','yellow'))(100) # 
plot(ndvimean, col=clsd) #valori molto alti nelle praterie d'alta quota, boschi latifoglie e arbusti. Valori più alti per la roccia nuda.

#PCA #la moving window passa sulla PC1 fino a creare una mappa di dev.standard derivante dalla 1a componente principale. Prendendo un sistema multibande ne calcoliamo una PCA e utilizziamo solo la 1a componente principale
Ys_2018_pca<- rasterPCA(Ys_2018)
plot(Ys_2018_pca$map) #la prima componente principale è quella che mantiene l'info originale, man mano che passiamo alle altre bande l'info si perde.

summary(Ys_2018_pca$model)
#the first PC contains  0.8228578  of the original information (proporzione della varianza che spiega quanta variabilità iniziale è presente nelle singole bande).
#Importance of components:
                           Comp.1     Comp.2     Comp.3
Standard deviation     50.3337498 22.1948987 7.26548308
Proportion of Variance  0.8228578  0.1599973 0.01714491
Cumulative Proportion   0.8228578  0.9828551 1.00000000

pc1 <- Ys_2018_pca$map$PC1
plot(pc1)


#proviamo a plottare i nostri dati con ggplot
p1 <- ggplot() + geom_raster(pc1, mapping = aes(x = x, y = y, fill=PC1)) + scale_fill_viridis()  +ggtitle("Standard deviation of PC1 by viridis colour scale")
 
p2 <- ggplot() +geom_raster(pc1, mapping = aes(x = x, y = y, fill=PC1)) +scale_fill_viridis(option = "magma")  +ggtitle("Standard deviation of PC1 by magma colour scale")

p3 <- ggplot() +geom_raster(pc1, mapping = aes(x = x, y = y, fill=PC1)) +scale_fill_viridis(option = "turbo")  +ggtitle("Standard deviation of PC1 by turbo colour scale")

grid.arrange(p1, p2, p3, nrow = 1)  #questo è il metodo migliore per individuare a livello geografico qualsiasi tipo di discontinuità, a livello ecologico gli ecotoni(passaggio da un paesaggio all'altro)

#.........................................

#6. Firme spettrali multitemporali
#Le firme spettrali del pixel di una pianta ci permettono di distinguere piante diverse che riflettono la luce in modo diverso. Vediamo se nelle firme spettrali effettivamente ciò che vediamo in termini di colori corrisponde ad una variazione di riflettanza.
# La firma spettrale è la riflettanza in funzione della lunghezza d'onda e ogni materiale è caratterizzato da una risposta univoca.
#è stata effettuata la firma spettrale su due porzioni di area boschiva in ciascuna immagine per determinare se gli incendi abbiano provocato un cambiamento da parte della vegetazione
#per ogni immagine sono stati presi due punti: uno su una porzione bruciata e uno su una porzione che è rimasta illesa dal fuoco


Ys_1987beforefire<-brick("Yellowstone_19870805.jpg")
plotRGB(Ys_1987beforefire,1, 2, 3, stretch="Lin")
click(Ys_1987beforefire, id=T, xy=T, cell=T, type="p", pch=16, col="magenta") # con la funzione "click" si selezionano i punti sull'immagine di cui ricaverà il valore di risposta spettrale per ogni immagine

#x      y    cell Yellowstone_19870805.1 Yellowstone_19870805.2
1 304.5 2300.5 3185907                    117                    205
  Yellowstone_19870805.3
1                    101
       x      y    cell Yellowstone_19870805.1 Yellowstone_19870805.2
1 1572.5 1524.5 5727799                    102                    111
  Yellowstone_19870805.3
1                     66

       x     y    cell Yellowstone_19870805.1 Yellowstone_19870805.2
1 1464.5 647.5 8598989                    172                    193
  Yellowstone_19870805.3
1                    124
       x      y    cell Yellowstone_19870805.1 Yellowstone_19870805.2
1 1291.5 2236.5 3396430                     95                    111
  Yellowstone_19870805.3
1                     66
       x     y    cell Yellowstone_19870805.1 Yellowstone_19870805.2
1 3020.5 839.5 7971937                     76                    106
  Yellowstone_19870805.3
1                     72

click(Ys_1987beforefire, id=T, xy=T, cell=T, type="p", pch=16, col="green")
 x      y    cell Yellowstone_19870805.1 Yellowstone_19870805.2
1 1662.5 1505.5 5790095                     73                    119
  Yellowstone_19870805.3
1                     57


# inseriamo i valori in un vettore e li salviamo in una variabile:
band<- c(1,2,3)
forest <- c(73,119,57)
grassland <- c(117,205,101)  #i dati sono diversi a seconda dei risultati del click

#Creiamo una tabella con i valori ricavati
spectrals <- data.frame(band,forest,grassland)

#plottiamo tutto in un grafico in cui le firme spettrali sono identificate da due linee di diverso colore
ggplot(spectrals,aes(x=band)) +geom_line(aes(y=forest), color="dark green")+geom_line(aes(y=grassland), color="light green") 
labs(x="band", y="reflectance")

#per fare una valutazione corretta è necessario che i punti, presi nei due anni per la stessa sezione, siano gli stessi
#......................................
